spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.auto-offset-reset=earliest

# Kafka
spring.kafka.consumer.enable-auto-commit=true
auto.commit.interval.ms=8000
spring.kafka.bootstrap-servers=${BOOTSTRAP_SERVERS}
spring.kafka.properties.schema.registry.url=${REGISTRY_URL}
outbound=${KAFKA_OUTBOUND_TOPIC}
broadcast-transformer=${KAFKA_BROADCAST_TRANSFORMER_TOPIC}
processOutbound=${KAFKA_PROCESS_OUTBOUND}

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
spring.r2dbc.initialization-mode=never

spring.r2dbc.url=r2dbc:postgresql://${FORMS_DB_HOST}:${FORMS_DB_PORT}/${FORMS_DB_NAME}
postgresql.db.host=${FORMS_DB_HOST}
postgresql.db.port=${FORMS_DB_PORT}
spring.r2dbc.name=${FORMS_DB_NAME}
spring.r2dbc.username=${FORMS_DB_USERNAME}
spring.r2dbc.password=${FORMS_DB_PASSWORD}

server.port=9093

db-scheduler.threads=5
db-scheduler.polling-interval=5s

fusionauth.url=
fusionauth.key=

logging.level.root=INFO

spring.devtools.restart.enabled = false

#Caffeine Cache
caffeine.cache.max.size=${CAFFEINE_CACHE_MAX_SIZE:#{1000}}
#caffeine.cache.max.size=0
caffeine.cache.exprie.duration.seconds=${CAFFEINE_CACHE_EXPIRE_DURATION:#{300}}

#Redis
spring.redis.db=${REDIS_DB_INDEX:#{1}}
spring.redis.host=${REDIS_HOST:#{"localhost"}}
spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
spring.redis.pool.max-idle=8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
spring.redis.number.port=${REDIS_NUMBER_PORT:#{6379}}
spring.redis.sentinel.master= # Name of Redis server.
spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
spring.redis.timeout=0
# This time in seconds and we are default set 60*60 = 3600 -> 1 Hour
redis.key.timeout=${REDIS_KEY_TIMEOUT:#{3600}}

#CDN Minio
cdn.minio.login.id=
cdn.minio.password=
cdn.minio.application.id=
cdn.minio.bucket.id=
cdn.minio.url=
cdn.minio.fa.key=
cdn.minio.fa.url=

#Azure Storage
spring.azure.blob.store.account.name=
spring.azure.blob.store.account.key=
spring.azure.blob.store.container.name=

# Email Config
spring.mail.host=${EMAIL_HOST:#{""}}
spring.mail.port=${EMAIL_PORT:#{"587"}}
spring.mail.username=${EMAIL_USERNAME:#{""}}
spring.mail.password=${EMAIL_PASSWORD:#{""}}
spring.mail.recipient=${RECIPIENT_EMAILS:#{""}}

# BotService WebClient Configurations
webclient.interval=${WEBCLIENT_INTERVAL:#{5000}}
webclient.retryMaxAttempts=${WEBCLIENT_RETRY_MAX_ATTEMPTS:#{3}}
webclient.retryMinBackoff=${WEBCLIENT_RETRY_MIN_BACK_OFF:#{5}}
